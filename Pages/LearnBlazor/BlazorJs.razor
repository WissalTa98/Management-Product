@page "/learnBlazor/blazorJs"
@inject IJSRuntime _JsRuntime

<h3>BlazorJs</h3>

<div class="row">
	<button class="btn btn-secondary m-2" style="width:200px;" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
	<button class="btn btn-success m-2" style="width:200px;" @onclick="ToastrSuccess">Toastr Success</button>
	<button class="btn btn-danger m-2" style="width:200px;" @onclick="ToastrFailure">Toastr Failure</button>
</div>

<div class="row">
	<button class="btn btn-success m-2" style="width:200px;" @onclick="SweetAlertSuccess">SweetAlert Success</button>
	<button class="btn btn-danger m-2" style="width:200px;" @onclick="SweetAlertFailure">SweetAlert Failure</button>
</div>

<div class="row">
	@if (ConfirmResult)
	{
		<p>Confirmation has been made!</p>
	}
	else
	{
		<p>Confirmation Pending!</p>
	}
</div>

@code {

	private string ConfirmMessage = "Are you sure want to click?";
	private bool ConfirmResult { get; set; }

	private async Task TestConfirmBox()
	{
		ConfirmResult= await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
	}

	private async Task ToastrSuccess()
	{
		await _JsRuntime.ToastrSuccess("Operation Succeful");
	}

	private async Task ToastrFailure()
	{
		await _JsRuntime.ToastrError("Operation Faild!");
	}

	private async Task SweetAlertSuccess()
	{
		await _JsRuntime.SweetAlertSuccess();
	}

	private async Task SweetAlertFailure()
	{
		await _JsRuntime.SweetAlertFailed();
	}

}
